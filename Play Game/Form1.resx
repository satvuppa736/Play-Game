<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cjn/zjM9/88zP//POx//7zuf/+c5v//vP/8=
</value>
  </data>
</root>